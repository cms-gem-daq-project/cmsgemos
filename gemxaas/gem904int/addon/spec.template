%define _package __package__
%define _packagename __packagename__
%define _zonename __zonename__
%define _version __version__
%define _release __release__
%define _prefix  __prefix__
%define _tmppath /tmp
%define _packagedir __packagedir__
%define _os __os__
%define _platform __platform__
%define _project __project__
%define _author __author__
%define _summary __summary__
%define _url __url__
%define _buildarch __buildarch__

%define _unpackaged_files_terminate_build 0

#
# Binary RPM specified attributed (lib and bin)
#
Summary: %{_summary}
Name: %{_project}-%{_packagename}
Version: %{_version}
Release: %{_release}
Packager: %{_author}
#BuildArch: %{_buildarch}
License: BSD
Group: Applications/extern
URL: %{_url}
BuildRoot: %{_tmppath}/%{_packagename}-%{_version}-%{_release}-buildroot
Prefix: %{_prefix}
Requires: daq-xaas-%{_zonename}-zone
%{?systemd_requires}
BuildRequires: systemd
%description
__description__


%pre

#%setup 

#%build

#
# Prepare the list of files that are the input to the binary and devel RPMs
#
%install
rm -rf $RPM_BUILD_ROOT
mkdir -p $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/{conf,profile,etc,scope}
mkdir -p $RPM_BUILD_ROOT/etc/cron.d
#mkdir -p $RPM_BUILD_ROOT/%{_prefix}/bin
#mkdir -p $RPM_BUILD_ROOT/%{_prefix}/htdocs/share/%{_zonename}
mkdir -p $RPM_BUILD_ROOT/%{_unitdir}
mkdir -p $RPM_BUILD_ROOT/%{_unitdir}-preset

if [ -d %{_packagedir}/scope ]; then 
	cd %{_packagedir}/scope; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 655 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/scope/{} \;
fi

if [ -d %{_packagedir}/conf ]; then 
	cd %{_packagedir}/conf; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 655 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/conf/{} \;
fi
if [ -d %{_packagedir}/etc ]; then 
	cd %{_packagedir}/etc; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 655 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/etc/{} \;
fi
if [ -d %{_packagedir}/profile ]; then
	cd %{_packagedir}/profile; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 655 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/profile/{} \;
fi
if [ -d %{_packagedir}/scripts ]; then
	cd %{_packagedir}/scripts; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 755 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/scripts/{} \;
fi
if [ -d %{_packagedir}/xml ]; then
	cd %{_packagedir}/xml; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 655 {} $RPM_BUILD_ROOT/%{_prefix}/share/%{_zonename}/xml/{} \;
fi

if [ -d %{_packagedir}/cron.d ]; then
	cd %{_packagedir}/cron.d; \
	find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 0644 {} $RPM_BUILD_ROOT/etc/cron.d/{} \;
fi
if [ -d %{_packagedir}/system ]; then
        cd %{_packagedir}/system; \
        find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 0644 {} $RPM_BUILD_ROOT/%{_unitdir}/{} \;
fi
if [ -d %{_packagedir}/system-preset ]; then
        cd %{_packagedir}/system-preset; \
        find ./ -name ".svn" -prune -o -name "*" -type f -exec install -D -m 0644 {} $RPM_BUILD_ROOT/%{_unitdir}-preset/{} \;
fi
%clean
rm -rf $RPM_BUILD_ROOT

#
# Files that go in the binary RPM
#
%files
%defattr(-,root,root,-)
#%{_prefix}/htdocs

%dir
%{_prefix}/share
/etc/cron.d
%{_unitdir}
%{_unitdir}-preset

#%changelog

# As quattor requires
#%doc MAINTAINER ChangeLog README

%post
%systemd_post %{_zonename}.addon.target
# Update of the RPM package
if [ $1 -eq 2 ] ; then
        systemctl preset %{_zonename}.addon.target >/dev/null 2>&1 || :
fi

%preun
%systemd_preun %{_zonename}.addon.target

%postun
%systemd_postun  %{_zonename}.addon.target


